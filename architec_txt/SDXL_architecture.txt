SDXL(
  (depth_estimator): DPTForDepthEstimation(
    (dpt): DPTModel(
      (embeddings): DPTViTHybridEmbeddings(
        (backbone): BitBackbone(
          (bit): BitModel(
            (embedder): BitEmbeddings(
              (convolution): WeightStandardizedConv2d(
                3, 64, kernel_size=(7, 7), stride=(2, 2), bias=False
                (pad): DynamicPad2d()
              )
              (pooler): BitMaxPool2d(
                kernel_size=(3, 3), stride=(2, 2), padding=(0, 0), dilation=(1, 1), ceil_mode=False
                (pad): DynamicPad2d()
              )
              (pad): Identity()
              (norm): BitGroupNormActivation(
                32, 64, eps=1e-05, affine=True
                (activation): ReLU()
              )
            )
            (encoder): BitEncoder(
              (stages): ModuleList(
                (0): BitStage(
                  (layers): Sequential(
                    (0): BitBottleneckLayer(
                      (downsample): BitDownsampleConv(
                        (conv): WeightStandardizedConv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                        (norm): BitGroupNormActivation(
                          32, 256, eps=1e-05, affine=True
                          (activation): Identity()
                        )
                      )
                      (conv1): WeightStandardizedConv2d(64, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (norm1): BitGroupNormActivation(
                        32, 64, eps=1e-05, affine=True
                        (activation): ReLU()
                      )
                      (conv2): WeightStandardizedConv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                      (norm2): BitGroupNormActivation(
                        32, 64, eps=1e-05, affine=True
                        (activation): ReLU()
                      )
                      (conv3): WeightStandardizedConv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (norm3): BitGroupNormActivation(
                        32, 256, eps=1e-05, affine=True
                        (activation): Identity()
                      )
                      (drop_path): Identity()
                      (activation): ReLU()
                    )
                    (1): BitBottleneckLayer(
                      (conv1): WeightStandardizedConv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (norm1): BitGroupNormActivation(
                        32, 64, eps=1e-05, affine=True
                        (activation): ReLU()
                      )
                      (conv2): WeightStandardizedConv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                      (norm2): BitGroupNormActivation(
                        32, 64, eps=1e-05, affine=True
                        (activation): ReLU()
                      )
                      (conv3): WeightStandardizedConv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (norm3): BitGroupNormActivation(
                        32, 256, eps=1e-05, affine=True
                        (activation): Identity()
                      )
                      (drop_path): Identity()
                      (activation): ReLU()
                    )
                    (2): BitBottleneckLayer(
                      (conv1): WeightStandardizedConv2d(256, 64, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (norm1): BitGroupNormActivation(
                        32, 64, eps=1e-05, affine=True
                        (activation): ReLU()
                      )
                      (conv2): WeightStandardizedConv2d(64, 64, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                      (norm2): BitGroupNormActivation(
                        32, 64, eps=1e-05, affine=True
                        (activation): ReLU()
                      )
                      (conv3): WeightStandardizedConv2d(64, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (norm3): BitGroupNormActivation(
                        32, 256, eps=1e-05, affine=True
                        (activation): Identity()
                      )
                      (drop_path): Identity()
                      (activation): ReLU()
                    )
                  )
                )
                (1): BitStage(
                  (layers): Sequential(
                    (0): BitBottleneckLayer(
                      (downsample): BitDownsampleConv(
                        (conv): WeightStandardizedConv2d(
                          256, 512, kernel_size=(1, 1), stride=(2, 2), bias=False
                          (pad): DynamicPad2d()
                        )
                        (norm): BitGroupNormActivation(
                          32, 512, eps=1e-05, affine=True
                          (activation): Identity()
                        )
                      )
                      (conv1): WeightStandardizedConv2d(256, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (norm1): BitGroupNormActivation(
                        32, 128, eps=1e-05, affine=True
                        (activation): ReLU()
                      )
                      (conv2): WeightStandardizedConv2d(
                        128, 128, kernel_size=(3, 3), stride=(2, 2), bias=False
                        (pad): DynamicPad2d()
                      )
                      (norm2): BitGroupNormActivation(
                        32, 128, eps=1e-05, affine=True
                        (activation): ReLU()
                      )
                      (conv3): WeightStandardizedConv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (norm3): BitGroupNormActivation(
                        32, 512, eps=1e-05, affine=True
                        (activation): Identity()
                      )
                      (drop_path): Identity()
                      (activation): ReLU()
                    )
                    (1): BitBottleneckLayer(
                      (conv1): WeightStandardizedConv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (norm1): BitGroupNormActivation(
                        32, 128, eps=1e-05, affine=True
                        (activation): ReLU()
                      )
                      (conv2): WeightStandardizedConv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                      (norm2): BitGroupNormActivation(
                        32, 128, eps=1e-05, affine=True
                        (activation): ReLU()
                      )
                      (conv3): WeightStandardizedConv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (norm3): BitGroupNormActivation(
                        32, 512, eps=1e-05, affine=True
                        (activation): Identity()
                      )
                      (drop_path): Identity()
                      (activation): ReLU()
                    )
                    (2): BitBottleneckLayer(
                      (conv1): WeightStandardizedConv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (norm1): BitGroupNormActivation(
                        32, 128, eps=1e-05, affine=True
                        (activation): ReLU()
                      )
                      (conv2): WeightStandardizedConv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                      (norm2): BitGroupNormActivation(
                        32, 128, eps=1e-05, affine=True
                        (activation): ReLU()
                      )
                      (conv3): WeightStandardizedConv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (norm3): BitGroupNormActivation(
                        32, 512, eps=1e-05, affine=True
                        (activation): Identity()
                      )
                      (drop_path): Identity()
                      (activation): ReLU()
                    )
                    (3): BitBottleneckLayer(
                      (conv1): WeightStandardizedConv2d(512, 128, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (norm1): BitGroupNormActivation(
                        32, 128, eps=1e-05, affine=True
                        (activation): ReLU()
                      )
                      (conv2): WeightStandardizedConv2d(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                      (norm2): BitGroupNormActivation(
                        32, 128, eps=1e-05, affine=True
                        (activation): ReLU()
                      )
                      (conv3): WeightStandardizedConv2d(128, 512, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (norm3): BitGroupNormActivation(
                        32, 512, eps=1e-05, affine=True
                        (activation): Identity()
                      )
                      (drop_path): Identity()
                      (activation): ReLU()
                    )
                  )
                )
                (2): BitStage(
                  (layers): Sequential(
                    (0): BitBottleneckLayer(
                      (downsample): BitDownsampleConv(
                        (conv): WeightStandardizedConv2d(
                          512, 1024, kernel_size=(1, 1), stride=(2, 2), bias=False
                          (pad): DynamicPad2d()
                        )
                        (norm): BitGroupNormActivation(
                          32, 1024, eps=1e-05, affine=True
                          (activation): Identity()
                        )
                      )
                      (conv1): WeightStandardizedConv2d(512, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (norm1): BitGroupNormActivation(
                        32, 256, eps=1e-05, affine=True
                        (activation): ReLU()
                      )
                      (conv2): WeightStandardizedConv2d(
                        256, 256, kernel_size=(3, 3), stride=(2, 2), bias=False
                        (pad): DynamicPad2d()
                      )
                      (norm2): BitGroupNormActivation(
                        32, 256, eps=1e-05, affine=True
                        (activation): ReLU()
                      )
                      (conv3): WeightStandardizedConv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (norm3): BitGroupNormActivation(
                        32, 1024, eps=1e-05, affine=True
                        (activation): Identity()
                      )
                      (drop_path): Identity()
                      (activation): ReLU()
                    )
                    (1): BitBottleneckLayer(
                      (conv1): WeightStandardizedConv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (norm1): BitGroupNormActivation(
                        32, 256, eps=1e-05, affine=True
                        (activation): ReLU()
                      )
                      (conv2): WeightStandardizedConv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                      (norm2): BitGroupNormActivation(
                        32, 256, eps=1e-05, affine=True
                        (activation): ReLU()
                      )
                      (conv3): WeightStandardizedConv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (norm3): BitGroupNormActivation(
                        32, 1024, eps=1e-05, affine=True
                        (activation): Identity()
                      )
                      (drop_path): Identity()
                      (activation): ReLU()
                    )
                    (2): BitBottleneckLayer(
                      (conv1): WeightStandardizedConv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (norm1): BitGroupNormActivation(
                        32, 256, eps=1e-05, affine=True
                        (activation): ReLU()
                      )
                      (conv2): WeightStandardizedConv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                      (norm2): BitGroupNormActivation(
                        32, 256, eps=1e-05, affine=True
                        (activation): ReLU()
                      )
                      (conv3): WeightStandardizedConv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (norm3): BitGroupNormActivation(
                        32, 1024, eps=1e-05, affine=True
                        (activation): Identity()
                      )
                      (drop_path): Identity()
                      (activation): ReLU()
                    )
                    (3): BitBottleneckLayer(
                      (conv1): WeightStandardizedConv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (norm1): BitGroupNormActivation(
                        32, 256, eps=1e-05, affine=True
                        (activation): ReLU()
                      )
                      (conv2): WeightStandardizedConv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                      (norm2): BitGroupNormActivation(
                        32, 256, eps=1e-05, affine=True
                        (activation): ReLU()
                      )
                      (conv3): WeightStandardizedConv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (norm3): BitGroupNormActivation(
                        32, 1024, eps=1e-05, affine=True
                        (activation): Identity()
                      )
                      (drop_path): Identity()
                      (activation): ReLU()
                    )
                    (4): BitBottleneckLayer(
                      (conv1): WeightStandardizedConv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (norm1): BitGroupNormActivation(
                        32, 256, eps=1e-05, affine=True
                        (activation): ReLU()
                      )
                      (conv2): WeightStandardizedConv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                      (norm2): BitGroupNormActivation(
                        32, 256, eps=1e-05, affine=True
                        (activation): ReLU()
                      )
                      (conv3): WeightStandardizedConv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (norm3): BitGroupNormActivation(
                        32, 1024, eps=1e-05, affine=True
                        (activation): Identity()
                      )
                      (drop_path): Identity()
                      (activation): ReLU()
                    )
                    (5): BitBottleneckLayer(
                      (conv1): WeightStandardizedConv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (norm1): BitGroupNormActivation(
                        32, 256, eps=1e-05, affine=True
                        (activation): ReLU()
                      )
                      (conv2): WeightStandardizedConv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                      (norm2): BitGroupNormActivation(
                        32, 256, eps=1e-05, affine=True
                        (activation): ReLU()
                      )
                      (conv3): WeightStandardizedConv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (norm3): BitGroupNormActivation(
                        32, 1024, eps=1e-05, affine=True
                        (activation): Identity()
                      )
                      (drop_path): Identity()
                      (activation): ReLU()
                    )
                    (6): BitBottleneckLayer(
                      (conv1): WeightStandardizedConv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (norm1): BitGroupNormActivation(
                        32, 256, eps=1e-05, affine=True
                        (activation): ReLU()
                      )
                      (conv2): WeightStandardizedConv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                      (norm2): BitGroupNormActivation(
                        32, 256, eps=1e-05, affine=True
                        (activation): ReLU()
                      )
                      (conv3): WeightStandardizedConv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (norm3): BitGroupNormActivation(
                        32, 1024, eps=1e-05, affine=True
                        (activation): Identity()
                      )
                      (drop_path): Identity()
                      (activation): ReLU()
                    )
                    (7): BitBottleneckLayer(
                      (conv1): WeightStandardizedConv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (norm1): BitGroupNormActivation(
                        32, 256, eps=1e-05, affine=True
                        (activation): ReLU()
                      )
                      (conv2): WeightStandardizedConv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                      (norm2): BitGroupNormActivation(
                        32, 256, eps=1e-05, affine=True
                        (activation): ReLU()
                      )
                      (conv3): WeightStandardizedConv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (norm3): BitGroupNormActivation(
                        32, 1024, eps=1e-05, affine=True
                        (activation): Identity()
                      )
                      (drop_path): Identity()
                      (activation): ReLU()
                    )
                    (8): BitBottleneckLayer(
                      (conv1): WeightStandardizedConv2d(1024, 256, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (norm1): BitGroupNormActivation(
                        32, 256, eps=1e-05, affine=True
                        (activation): ReLU()
                      )
                      (conv2): WeightStandardizedConv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
                      (norm2): BitGroupNormActivation(
                        32, 256, eps=1e-05, affine=True
                        (activation): ReLU()
                      )
                      (conv3): WeightStandardizedConv2d(256, 1024, kernel_size=(1, 1), stride=(1, 1), bias=False)
                      (norm3): BitGroupNormActivation(
                        32, 1024, eps=1e-05, affine=True
                        (activation): Identity()
                      )
                      (drop_path): Identity()
                      (activation): ReLU()
                    )
                  )
                )
              )
            )
            (norm): Identity()
            (pooler): AdaptiveAvgPool2d(output_size=(1, 1))
          )
        )
        (projection): Conv2d(1024, 768, kernel_size=(1, 1), stride=(1, 1))
      )
      (encoder): DPTViTEncoder(
        (layer): ModuleList(
          (0-11): 12 x DPTViTLayer(
            (attention): DPTViTAttention(
              (attention): DPTViTSelfAttention(
                (query): Linear(in_features=768, out_features=768, bias=True)
                (key): Linear(in_features=768, out_features=768, bias=True)
                (value): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.0, inplace=False)
              )
              (output): DPTViTSelfOutput(
                (dense): Linear(in_features=768, out_features=768, bias=True)
                (dropout): Dropout(p=0.0, inplace=False)
              )
            )
            (intermediate): DPTViTIntermediate(
              (dense): Linear(in_features=768, out_features=3072, bias=True)
              (intermediate_act_fn): GELUActivation()
            )
            (output): DPTViTOutput(
              (dense): Linear(in_features=3072, out_features=768, bias=True)
              (dropout): Dropout(p=0.0, inplace=False)
            )
            (layernorm_before): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
            (layernorm_after): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
          )
        )
      )
      (layernorm): LayerNorm((768,), eps=1e-12, elementwise_affine=True)
    )
    (neck): DPTNeck(
      (reassemble_stage): DPTReassembleStage(
        (layers): ModuleList(
          (0-1): 2 x Identity()
          (2): DPTReassembleLayer(
            (projection): Conv2d(768, 768, kernel_size=(1, 1), stride=(1, 1))
            (resize): Identity()
          )
          (3): DPTReassembleLayer(
            (projection): Conv2d(768, 768, kernel_size=(1, 1), stride=(1, 1))
            (resize): Conv2d(768, 768, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
          )
        )
        (readout_projects): ModuleList(
          (0-1): 2 x Sequential(
            (0): Identity()
          )
          (2-3): 2 x Sequential(
            (0): Linear(in_features=1536, out_features=768, bias=True)
            (1): GELUActivation()
          )
        )
      )
      (convs): ModuleList(
        (0): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (1): Conv2d(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
        (2-3): 2 x Conv2d(768, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1), bias=False)
      )
      (fusion_stage): DPTFeatureFusionStage(
        (layers): ModuleList(
          (0-3): 4 x DPTFeatureFusionLayer(
            (projection): Conv2d(256, 256, kernel_size=(1, 1), stride=(1, 1))
            (residual_layer1): DPTPreActResidualLayer(
              (activation1): ReLU()
              (convolution1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (activation2): ReLU()
              (convolution2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            )
            (residual_layer2): DPTPreActResidualLayer(
              (activation1): ReLU()
              (convolution1): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (activation2): ReLU()
              (convolution2): Conv2d(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            )
          )
        )
      )
    )
    (head): DPTDepthEstimationHead(
      (head): Sequential(
        (0): Conv2d(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): Upsample(scale_factor=2.0, mode='bilinear')
        (2): Conv2d(128, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (3): ReLU()
        (4): Conv2d(32, 1, kernel_size=(1, 1), stride=(1, 1))
        (5): ReLU()
      )
    )
  )
  (controlnet): ControlNetModel(
    (conv_in): Conv2d(4, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (time_proj): Timesteps()
    (time_embedding): TimestepEmbedding(
      (linear_1): Linear(in_features=320, out_features=1280, bias=True)
      (act): SiLU()
      (linear_2): Linear(in_features=1280, out_features=1280, bias=True)
    )
    (add_time_proj): Timesteps()
    (add_embedding): TimestepEmbedding(
      (linear_1): Linear(in_features=2816, out_features=1280, bias=True)
      (act): SiLU()
      (linear_2): Linear(in_features=1280, out_features=1280, bias=True)
    )
    (controlnet_cond_embedding): ControlNetConditioningEmbedding(
      (conv_in): Conv2d(3, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (blocks): ModuleList(
        (0): Conv2d(16, 16, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (1): Conv2d(16, 32, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (2): Conv2d(32, 32, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (3): Conv2d(32, 96, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
        (4): Conv2d(96, 96, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
        (5): Conv2d(96, 256, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
      )
      (conv_out): Conv2d(256, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (down_blocks): ModuleList(
      (0): DownBlock2D(
        (resnets): ModuleList(
          (0-1): 2 x ResnetBlock2D(
            (norm1): GroupNorm(32, 320, eps=1e-05, affine=True)
            (conv1): LoRACompatibleConv(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (time_emb_proj): LoRACompatibleLinear(in_features=1280, out_features=320, bias=True)
            (norm2): GroupNorm(32, 320, eps=1e-05, affine=True)
            (dropout): Dropout(p=0.0, inplace=False)
            (conv2): LoRACompatibleConv(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (nonlinearity): SiLU()
          )
        )
        (downsamplers): ModuleList(
          (0): Downsample2D(
            (conv): LoRACompatibleConv(320, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
          )
        )
      )
      (1): CrossAttnDownBlock2D(
        (attentions): ModuleList(
          (0-1): 2 x Transformer2DModel(
            (norm): GroupNorm(32, 640, eps=1e-06, affine=True)
            (proj_in): LoRACompatibleLinear(in_features=640, out_features=640, bias=True)
            (transformer_blocks): ModuleList(
              (0-1): 2 x BasicTransformerBlock(
                (norm1): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
                (attn1): Attention(
                  (to_q): LoRACompatibleLinear(in_features=640, out_features=640, bias=False)
                  (to_k): LoRACompatibleLinear(in_features=640, out_features=640, bias=False)
                  (to_v): LoRACompatibleLinear(in_features=640, out_features=640, bias=False)
                  (to_out): ModuleList(
                    (0): LoRACompatibleLinear(in_features=640, out_features=640, bias=True)
                    (1): Dropout(p=0.0, inplace=False)
                  )
                )
                (norm2): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
                (attn2): Attention(
                  (to_q): LoRACompatibleLinear(in_features=640, out_features=640, bias=False)
                  (to_k): LoRACompatibleLinear(in_features=2048, out_features=640, bias=False)
                  (to_v): LoRACompatibleLinear(in_features=2048, out_features=640, bias=False)
                  (to_out): ModuleList(
                    (0): LoRACompatibleLinear(in_features=640, out_features=640, bias=True)
                    (1): Dropout(p=0.0, inplace=False)
                  )
                )
                (norm3): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
                (ff): FeedForward(
                  (net): ModuleList(
                    (0): GEGLU(
                      (proj): LoRACompatibleLinear(in_features=640, out_features=5120, bias=True)
                    )
                    (1): Dropout(p=0.0, inplace=False)
                    (2): LoRACompatibleLinear(in_features=2560, out_features=640, bias=True)
                  )
                )
              )
            )
            (proj_out): LoRACompatibleLinear(in_features=640, out_features=640, bias=True)
          )
        )
        (resnets): ModuleList(
          (0): ResnetBlock2D(
            (norm1): GroupNorm(32, 320, eps=1e-05, affine=True)
            (conv1): LoRACompatibleConv(320, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (time_emb_proj): LoRACompatibleLinear(in_features=1280, out_features=640, bias=True)
            (norm2): GroupNorm(32, 640, eps=1e-05, affine=True)
            (dropout): Dropout(p=0.0, inplace=False)
            (conv2): LoRACompatibleConv(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (nonlinearity): SiLU()
            (conv_shortcut): LoRACompatibleConv(320, 640, kernel_size=(1, 1), stride=(1, 1))
          )
          (1): ResnetBlock2D(
            (norm1): GroupNorm(32, 640, eps=1e-05, affine=True)
            (conv1): LoRACompatibleConv(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (time_emb_proj): LoRACompatibleLinear(in_features=1280, out_features=640, bias=True)
            (norm2): GroupNorm(32, 640, eps=1e-05, affine=True)
            (dropout): Dropout(p=0.0, inplace=False)
            (conv2): LoRACompatibleConv(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (nonlinearity): SiLU()
          )
        )
        (downsamplers): ModuleList(
          (0): Downsample2D(
            (conv): LoRACompatibleConv(640, 640, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
          )
        )
      )
      (2): CrossAttnDownBlock2D(
        (attentions): ModuleList(
          (0-1): 2 x Transformer2DModel(
            (norm): GroupNorm(32, 1280, eps=1e-06, affine=True)
            (proj_in): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=True)
            (transformer_blocks): ModuleList(
              (0-9): 10 x BasicTransformerBlock(
                (norm1): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
                (attn1): Attention(
                  (to_q): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=False)
                  (to_k): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=False)
                  (to_v): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=False)
                  (to_out): ModuleList(
                    (0): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=True)
                    (1): Dropout(p=0.0, inplace=False)
                  )
                )
                (norm2): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
                (attn2): Attention(
                  (to_q): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=False)
                  (to_k): LoRACompatibleLinear(in_features=2048, out_features=1280, bias=False)
                  (to_v): LoRACompatibleLinear(in_features=2048, out_features=1280, bias=False)
                  (to_out): ModuleList(
                    (0): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=True)
                    (1): Dropout(p=0.0, inplace=False)
                  )
                )
                (norm3): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
                (ff): FeedForward(
                  (net): ModuleList(
                    (0): GEGLU(
                      (proj): LoRACompatibleLinear(in_features=1280, out_features=10240, bias=True)
                    )
                    (1): Dropout(p=0.0, inplace=False)
                    (2): LoRACompatibleLinear(in_features=5120, out_features=1280, bias=True)
                  )
                )
              )
            )
            (proj_out): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=True)
          )
        )
        (resnets): ModuleList(
          (0): ResnetBlock2D(
            (norm1): GroupNorm(32, 640, eps=1e-05, affine=True)
            (conv1): LoRACompatibleConv(640, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (time_emb_proj): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=True)
            (norm2): GroupNorm(32, 1280, eps=1e-05, affine=True)
            (dropout): Dropout(p=0.0, inplace=False)
            (conv2): LoRACompatibleConv(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (nonlinearity): SiLU()
            (conv_shortcut): LoRACompatibleConv(640, 1280, kernel_size=(1, 1), stride=(1, 1))
          )
          (1): ResnetBlock2D(
            (norm1): GroupNorm(32, 1280, eps=1e-05, affine=True)
            (conv1): LoRACompatibleConv(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (time_emb_proj): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=True)
            (norm2): GroupNorm(32, 1280, eps=1e-05, affine=True)
            (dropout): Dropout(p=0.0, inplace=False)
            (conv2): LoRACompatibleConv(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (nonlinearity): SiLU()
          )
        )
      )
    )
    (controlnet_down_blocks): ModuleList(
      (0-3): 4 x Conv2d(320, 320, kernel_size=(1, 1), stride=(1, 1))
      (4-6): 3 x Conv2d(640, 640, kernel_size=(1, 1), stride=(1, 1))
      (7-8): 2 x Conv2d(1280, 1280, kernel_size=(1, 1), stride=(1, 1))
    )
    (controlnet_mid_block): Conv2d(1280, 1280, kernel_size=(1, 1), stride=(1, 1))
    (mid_block): UNetMidBlock2DCrossAttn(
      (attentions): ModuleList(
        (0): Transformer2DModel(
          (norm): GroupNorm(32, 1280, eps=1e-06, affine=True)
          (proj_in): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=True)
          (transformer_blocks): ModuleList(
            (0-9): 10 x BasicTransformerBlock(
              (norm1): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
              (attn1): Attention(
                (to_q): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=False)
                (to_k): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=False)
                (to_v): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=False)
                (to_out): ModuleList(
                  (0): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=True)
                  (1): Dropout(p=0.0, inplace=False)
                )
              )
              (norm2): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
              (attn2): Attention(
                (to_q): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=False)
                (to_k): LoRACompatibleLinear(in_features=2048, out_features=1280, bias=False)
                (to_v): LoRACompatibleLinear(in_features=2048, out_features=1280, bias=False)
                (to_out): ModuleList(
                  (0): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=True)
                  (1): Dropout(p=0.0, inplace=False)
                )
              )
              (norm3): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
              (ff): FeedForward(
                (net): ModuleList(
                  (0): GEGLU(
                    (proj): LoRACompatibleLinear(in_features=1280, out_features=10240, bias=True)
                  )
                  (1): Dropout(p=0.0, inplace=False)
                  (2): LoRACompatibleLinear(in_features=5120, out_features=1280, bias=True)
                )
              )
            )
          )
          (proj_out): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=True)
        )
      )
      (resnets): ModuleList(
        (0-1): 2 x ResnetBlock2D(
          (norm1): GroupNorm(32, 1280, eps=1e-05, affine=True)
          (conv1): LoRACompatibleConv(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (time_emb_proj): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=True)
          (norm2): GroupNorm(32, 1280, eps=1e-05, affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (conv2): LoRACompatibleConv(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (nonlinearity): SiLU()
        )
      )
    )
  )
  (vae): AutoencoderKL(
    (encoder): Encoder(
      (conv_in): Conv2d(3, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (down_blocks): ModuleList(
        (0): DownEncoderBlock2D(
          (resnets): ModuleList(
            (0-1): 2 x ResnetBlock2D(
              (norm1): GroupNorm(32, 128, eps=1e-06, affine=True)
              (conv1): LoRACompatibleConv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (norm2): GroupNorm(32, 128, eps=1e-06, affine=True)
              (dropout): Dropout(p=0.0, inplace=False)
              (conv2): LoRACompatibleConv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (nonlinearity): SiLU()
            )
          )
          (downsamplers): ModuleList(
            (0): Downsample2D(
              (conv): LoRACompatibleConv(128, 128, kernel_size=(3, 3), stride=(2, 2))
            )
          )
        )
        (1): DownEncoderBlock2D(
          (resnets): ModuleList(
            (0): ResnetBlock2D(
              (norm1): GroupNorm(32, 128, eps=1e-06, affine=True)
              (conv1): LoRACompatibleConv(128, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (norm2): GroupNorm(32, 256, eps=1e-06, affine=True)
              (dropout): Dropout(p=0.0, inplace=False)
              (conv2): LoRACompatibleConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (nonlinearity): SiLU()
              (conv_shortcut): LoRACompatibleConv(128, 256, kernel_size=(1, 1), stride=(1, 1))
            )
            (1): ResnetBlock2D(
              (norm1): GroupNorm(32, 256, eps=1e-06, affine=True)
              (conv1): LoRACompatibleConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (norm2): GroupNorm(32, 256, eps=1e-06, affine=True)
              (dropout): Dropout(p=0.0, inplace=False)
              (conv2): LoRACompatibleConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (nonlinearity): SiLU()
            )
          )
          (downsamplers): ModuleList(
            (0): Downsample2D(
              (conv): LoRACompatibleConv(256, 256, kernel_size=(3, 3), stride=(2, 2))
            )
          )
        )
        (2): DownEncoderBlock2D(
          (resnets): ModuleList(
            (0): ResnetBlock2D(
              (norm1): GroupNorm(32, 256, eps=1e-06, affine=True)
              (conv1): LoRACompatibleConv(256, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (norm2): GroupNorm(32, 512, eps=1e-06, affine=True)
              (dropout): Dropout(p=0.0, inplace=False)
              (conv2): LoRACompatibleConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (nonlinearity): SiLU()
              (conv_shortcut): LoRACompatibleConv(256, 512, kernel_size=(1, 1), stride=(1, 1))
            )
            (1): ResnetBlock2D(
              (norm1): GroupNorm(32, 512, eps=1e-06, affine=True)
              (conv1): LoRACompatibleConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (norm2): GroupNorm(32, 512, eps=1e-06, affine=True)
              (dropout): Dropout(p=0.0, inplace=False)
              (conv2): LoRACompatibleConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (nonlinearity): SiLU()
            )
          )
          (downsamplers): ModuleList(
            (0): Downsample2D(
              (conv): LoRACompatibleConv(512, 512, kernel_size=(3, 3), stride=(2, 2))
            )
          )
        )
        (3): DownEncoderBlock2D(
          (resnets): ModuleList(
            (0-1): 2 x ResnetBlock2D(
              (norm1): GroupNorm(32, 512, eps=1e-06, affine=True)
              (conv1): LoRACompatibleConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (norm2): GroupNorm(32, 512, eps=1e-06, affine=True)
              (dropout): Dropout(p=0.0, inplace=False)
              (conv2): LoRACompatibleConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (nonlinearity): SiLU()
            )
          )
        )
      )
      (mid_block): UNetMidBlock2D(
        (attentions): ModuleList(
          (0): Attention(
            (group_norm): GroupNorm(32, 512, eps=1e-06, affine=True)
            (to_q): LoRACompatibleLinear(in_features=512, out_features=512, bias=True)
            (to_k): LoRACompatibleLinear(in_features=512, out_features=512, bias=True)
            (to_v): LoRACompatibleLinear(in_features=512, out_features=512, bias=True)
            (to_out): ModuleList(
              (0): LoRACompatibleLinear(in_features=512, out_features=512, bias=True)
              (1): Dropout(p=0.0, inplace=False)
            )
          )
        )
        (resnets): ModuleList(
          (0-1): 2 x ResnetBlock2D(
            (norm1): GroupNorm(32, 512, eps=1e-06, affine=True)
            (conv1): LoRACompatibleConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (norm2): GroupNorm(32, 512, eps=1e-06, affine=True)
            (dropout): Dropout(p=0.0, inplace=False)
            (conv2): LoRACompatibleConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (nonlinearity): SiLU()
          )
        )
      )
      (conv_norm_out): GroupNorm(32, 512, eps=1e-06, affine=True)
      (conv_act): SiLU()
      (conv_out): Conv2d(512, 8, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (decoder): Decoder(
      (conv_in): Conv2d(4, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
      (up_blocks): ModuleList(
        (0-1): 2 x UpDecoderBlock2D(
          (resnets): ModuleList(
            (0-2): 3 x ResnetBlock2D(
              (norm1): GroupNorm(32, 512, eps=1e-06, affine=True)
              (conv1): LoRACompatibleConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (norm2): GroupNorm(32, 512, eps=1e-06, affine=True)
              (dropout): Dropout(p=0.0, inplace=False)
              (conv2): LoRACompatibleConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (nonlinearity): SiLU()
            )
          )
          (upsamplers): ModuleList(
            (0): Upsample2D(
              (conv): LoRACompatibleConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            )
          )
        )
        (2): UpDecoderBlock2D(
          (resnets): ModuleList(
            (0): ResnetBlock2D(
              (norm1): GroupNorm(32, 512, eps=1e-06, affine=True)
              (conv1): LoRACompatibleConv(512, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (norm2): GroupNorm(32, 256, eps=1e-06, affine=True)
              (dropout): Dropout(p=0.0, inplace=False)
              (conv2): LoRACompatibleConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (nonlinearity): SiLU()
              (conv_shortcut): LoRACompatibleConv(512, 256, kernel_size=(1, 1), stride=(1, 1))
            )
            (1-2): 2 x ResnetBlock2D(
              (norm1): GroupNorm(32, 256, eps=1e-06, affine=True)
              (conv1): LoRACompatibleConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (norm2): GroupNorm(32, 256, eps=1e-06, affine=True)
              (dropout): Dropout(p=0.0, inplace=False)
              (conv2): LoRACompatibleConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (nonlinearity): SiLU()
            )
          )
          (upsamplers): ModuleList(
            (0): Upsample2D(
              (conv): LoRACompatibleConv(256, 256, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            )
          )
        )
        (3): UpDecoderBlock2D(
          (resnets): ModuleList(
            (0): ResnetBlock2D(
              (norm1): GroupNorm(32, 256, eps=1e-06, affine=True)
              (conv1): LoRACompatibleConv(256, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (norm2): GroupNorm(32, 128, eps=1e-06, affine=True)
              (dropout): Dropout(p=0.0, inplace=False)
              (conv2): LoRACompatibleConv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (nonlinearity): SiLU()
              (conv_shortcut): LoRACompatibleConv(256, 128, kernel_size=(1, 1), stride=(1, 1))
            )
            (1-2): 2 x ResnetBlock2D(
              (norm1): GroupNorm(32, 128, eps=1e-06, affine=True)
              (conv1): LoRACompatibleConv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (norm2): GroupNorm(32, 128, eps=1e-06, affine=True)
              (dropout): Dropout(p=0.0, inplace=False)
              (conv2): LoRACompatibleConv(128, 128, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
              (nonlinearity): SiLU()
            )
          )
        )
      )
      (mid_block): UNetMidBlock2D(
        (attentions): ModuleList(
          (0): Attention(
            (group_norm): GroupNorm(32, 512, eps=1e-06, affine=True)
            (to_q): LoRACompatibleLinear(in_features=512, out_features=512, bias=True)
            (to_k): LoRACompatibleLinear(in_features=512, out_features=512, bias=True)
            (to_v): LoRACompatibleLinear(in_features=512, out_features=512, bias=True)
            (to_out): ModuleList(
              (0): LoRACompatibleLinear(in_features=512, out_features=512, bias=True)
              (1): Dropout(p=0.0, inplace=False)
            )
          )
        )
        (resnets): ModuleList(
          (0-1): 2 x ResnetBlock2D(
            (norm1): GroupNorm(32, 512, eps=1e-06, affine=True)
            (conv1): LoRACompatibleConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (norm2): GroupNorm(32, 512, eps=1e-06, affine=True)
            (dropout): Dropout(p=0.0, inplace=False)
            (conv2): LoRACompatibleConv(512, 512, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (nonlinearity): SiLU()
          )
        )
      )
      (conv_norm_out): GroupNorm(32, 128, eps=1e-06, affine=True)
      (conv_act): SiLU()
      (conv_out): Conv2d(128, 3, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    )
    (quant_conv): Conv2d(8, 8, kernel_size=(1, 1), stride=(1, 1))
    (post_quant_conv): Conv2d(4, 4, kernel_size=(1, 1), stride=(1, 1))
  )
  (text_encoder): CLIPTextModel(
    (text_model): CLIPTextTransformer(
      (embeddings): CLIPTextEmbeddings(
        (token_embedding): Embedding(49408, 768)
        (position_embedding): Embedding(77, 768)
      )
      (encoder): CLIPEncoder(
        (layers): ModuleList(
          (0-11): 12 x CLIPEncoderLayer(
            (self_attn): CLIPAttention(
              (k_proj): Linear(in_features=768, out_features=768, bias=True)
              (v_proj): Linear(in_features=768, out_features=768, bias=True)
              (q_proj): Linear(in_features=768, out_features=768, bias=True)
              (out_proj): Linear(in_features=768, out_features=768, bias=True)
            )
            (layer_norm1): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
            (mlp): CLIPMLP(
              (activation_fn): QuickGELUActivation()
              (fc1): Linear(in_features=768, out_features=3072, bias=True)
              (fc2): Linear(in_features=3072, out_features=768, bias=True)
            )
            (layer_norm2): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
          )
        )
      )
      (final_layer_norm): LayerNorm((768,), eps=1e-05, elementwise_affine=True)
    )
  )
  (unet): UNet2DConditionModel(
    (conv_in): Conv2d(4, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (time_proj): Timesteps()
    (time_embedding): TimestepEmbedding(
      (linear_1): Linear(in_features=320, out_features=1280, bias=True)
      (act): SiLU()
      (linear_2): Linear(in_features=1280, out_features=1280, bias=True)
    )
    (add_time_proj): Timesteps()
    (add_embedding): TimestepEmbedding(
      (linear_1): Linear(in_features=2816, out_features=1280, bias=True)
      (act): SiLU()
      (linear_2): Linear(in_features=1280, out_features=1280, bias=True)
    )
    (down_blocks): ModuleList(
      (0): DownBlock2D(
        (resnets): ModuleList(
          (0-1): 2 x ResnetBlock2D(
            (norm1): GroupNorm(32, 320, eps=1e-05, affine=True)
            (conv1): LoRACompatibleConv(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (time_emb_proj): LoRACompatibleLinear(in_features=1280, out_features=320, bias=True)
            (norm2): GroupNorm(32, 320, eps=1e-05, affine=True)
            (dropout): Dropout(p=0.0, inplace=False)
            (conv2): LoRACompatibleConv(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (nonlinearity): SiLU()
          )
        )
        (downsamplers): ModuleList(
          (0): Downsample2D(
            (conv): LoRACompatibleConv(320, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
          )
        )
      )
      (1): CrossAttnDownBlock2D(
        (attentions): ModuleList(
          (0-1): 2 x Transformer2DModel(
            (norm): GroupNorm(32, 640, eps=1e-06, affine=True)
            (proj_in): LoRACompatibleLinear(in_features=640, out_features=640, bias=True)
            (transformer_blocks): ModuleList(
              (0-1): 2 x BasicTransformerBlock(
                (norm1): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
                (attn1): Attention(
                  (to_q): LoRACompatibleLinear(in_features=640, out_features=640, bias=False)
                  (to_k): LoRACompatibleLinear(in_features=640, out_features=640, bias=False)
                  (to_v): LoRACompatibleLinear(in_features=640, out_features=640, bias=False)
                  (to_out): ModuleList(
                    (0): LoRACompatibleLinear(in_features=640, out_features=640, bias=True)
                    (1): Dropout(p=0.0, inplace=False)
                  )
                )
                (norm2): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
                (attn2): Attention(
                  (to_q): LoRACompatibleLinear(in_features=640, out_features=640, bias=False)
                  (to_k): LoRACompatibleLinear(in_features=2048, out_features=640, bias=False)
                  (to_v): LoRACompatibleLinear(in_features=2048, out_features=640, bias=False)
                  (to_out): ModuleList(
                    (0): LoRACompatibleLinear(in_features=640, out_features=640, bias=True)
                    (1): Dropout(p=0.0, inplace=False)
                  )
                )
                (norm3): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
                (ff): FeedForward(
                  (net): ModuleList(
                    (0): GEGLU(
                      (proj): LoRACompatibleLinear(in_features=640, out_features=5120, bias=True)
                    )
                    (1): Dropout(p=0.0, inplace=False)
                    (2): LoRACompatibleLinear(in_features=2560, out_features=640, bias=True)
                  )
                )
              )
            )
            (proj_out): LoRACompatibleLinear(in_features=640, out_features=640, bias=True)
          )
        )
        (resnets): ModuleList(
          (0): ResnetBlock2D(
            (norm1): GroupNorm(32, 320, eps=1e-05, affine=True)
            (conv1): LoRACompatibleConv(320, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (time_emb_proj): LoRACompatibleLinear(in_features=1280, out_features=640, bias=True)
            (norm2): GroupNorm(32, 640, eps=1e-05, affine=True)
            (dropout): Dropout(p=0.0, inplace=False)
            (conv2): LoRACompatibleConv(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (nonlinearity): SiLU()
            (conv_shortcut): LoRACompatibleConv(320, 640, kernel_size=(1, 1), stride=(1, 1))
          )
          (1): ResnetBlock2D(
            (norm1): GroupNorm(32, 640, eps=1e-05, affine=True)
            (conv1): LoRACompatibleConv(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (time_emb_proj): LoRACompatibleLinear(in_features=1280, out_features=640, bias=True)
            (norm2): GroupNorm(32, 640, eps=1e-05, affine=True)
            (dropout): Dropout(p=0.0, inplace=False)
            (conv2): LoRACompatibleConv(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (nonlinearity): SiLU()
          )
        )
        (downsamplers): ModuleList(
          (0): Downsample2D(
            (conv): LoRACompatibleConv(640, 640, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
          )
        )
      )
      (2): CrossAttnDownBlock2D(
        (attentions): ModuleList(
          (0-1): 2 x Transformer2DModel(
            (norm): GroupNorm(32, 1280, eps=1e-06, affine=True)
            (proj_in): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=True)
            (transformer_blocks): ModuleList(
              (0-9): 10 x BasicTransformerBlock(
                (norm1): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
                (attn1): Attention(
                  (to_q): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=False)
                  (to_k): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=False)
                  (to_v): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=False)
                  (to_out): ModuleList(
                    (0): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=True)
                    (1): Dropout(p=0.0, inplace=False)
                  )
                )
                (norm2): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
                (attn2): Attention(
                  (to_q): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=False)
                  (to_k): LoRACompatibleLinear(in_features=2048, out_features=1280, bias=False)
                  (to_v): LoRACompatibleLinear(in_features=2048, out_features=1280, bias=False)
                  (to_out): ModuleList(
                    (0): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=True)
                    (1): Dropout(p=0.0, inplace=False)
                  )
                )
                (norm3): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
                (ff): FeedForward(
                  (net): ModuleList(
                    (0): GEGLU(
                      (proj): LoRACompatibleLinear(in_features=1280, out_features=10240, bias=True)
                    )
                    (1): Dropout(p=0.0, inplace=False)
                    (2): LoRACompatibleLinear(in_features=5120, out_features=1280, bias=True)
                  )
                )
              )
            )
            (proj_out): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=True)
          )
        )
        (resnets): ModuleList(
          (0): ResnetBlock2D(
            (norm1): GroupNorm(32, 640, eps=1e-05, affine=True)
            (conv1): LoRACompatibleConv(640, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (time_emb_proj): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=True)
            (norm2): GroupNorm(32, 1280, eps=1e-05, affine=True)
            (dropout): Dropout(p=0.0, inplace=False)
            (conv2): LoRACompatibleConv(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (nonlinearity): SiLU()
            (conv_shortcut): LoRACompatibleConv(640, 1280, kernel_size=(1, 1), stride=(1, 1))
          )
          (1): ResnetBlock2D(
            (norm1): GroupNorm(32, 1280, eps=1e-05, affine=True)
            (conv1): LoRACompatibleConv(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (time_emb_proj): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=True)
            (norm2): GroupNorm(32, 1280, eps=1e-05, affine=True)
            (dropout): Dropout(p=0.0, inplace=False)
            (conv2): LoRACompatibleConv(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (nonlinearity): SiLU()
          )
        )
      )
    )
    (up_blocks): ModuleList(
      (0): CrossAttnUpBlock2D(
        (attentions): ModuleList(
          (0-2): 3 x Transformer2DModel(
            (norm): GroupNorm(32, 1280, eps=1e-06, affine=True)
            (proj_in): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=True)
            (transformer_blocks): ModuleList(
              (0-9): 10 x BasicTransformerBlock(
                (norm1): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
                (attn1): Attention(
                  (to_q): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=False)
                  (to_k): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=False)
                  (to_v): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=False)
                  (to_out): ModuleList(
                    (0): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=True)
                    (1): Dropout(p=0.0, inplace=False)
                  )
                )
                (norm2): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
                (attn2): Attention(
                  (to_q): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=False)
                  (to_k): LoRACompatibleLinear(in_features=2048, out_features=1280, bias=False)
                  (to_v): LoRACompatibleLinear(in_features=2048, out_features=1280, bias=False)
                  (to_out): ModuleList(
                    (0): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=True)
                    (1): Dropout(p=0.0, inplace=False)
                  )
                )
                (norm3): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
                (ff): FeedForward(
                  (net): ModuleList(
                    (0): GEGLU(
                      (proj): LoRACompatibleLinear(in_features=1280, out_features=10240, bias=True)
                    )
                    (1): Dropout(p=0.0, inplace=False)
                    (2): LoRACompatibleLinear(in_features=5120, out_features=1280, bias=True)
                  )
                )
              )
            )
            (proj_out): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=True)
          )
        )
        (resnets): ModuleList(
          (0-1): 2 x ResnetBlock2D(
            (norm1): GroupNorm(32, 2560, eps=1e-05, affine=True)
            (conv1): LoRACompatibleConv(2560, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (time_emb_proj): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=True)
            (norm2): GroupNorm(32, 1280, eps=1e-05, affine=True)
            (dropout): Dropout(p=0.0, inplace=False)
            (conv2): LoRACompatibleConv(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (nonlinearity): SiLU()
            (conv_shortcut): LoRACompatibleConv(2560, 1280, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): ResnetBlock2D(
            (norm1): GroupNorm(32, 1920, eps=1e-05, affine=True)
            (conv1): LoRACompatibleConv(1920, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (time_emb_proj): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=True)
            (norm2): GroupNorm(32, 1280, eps=1e-05, affine=True)
            (dropout): Dropout(p=0.0, inplace=False)
            (conv2): LoRACompatibleConv(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (nonlinearity): SiLU()
            (conv_shortcut): LoRACompatibleConv(1920, 1280, kernel_size=(1, 1), stride=(1, 1))
          )
        )
        (upsamplers): ModuleList(
          (0): Upsample2D(
            (conv): LoRACompatibleConv(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
        )
      )
      (1): CrossAttnUpBlock2D(
        (attentions): ModuleList(
          (0-2): 3 x Transformer2DModel(
            (norm): GroupNorm(32, 640, eps=1e-06, affine=True)
            (proj_in): LoRACompatibleLinear(in_features=640, out_features=640, bias=True)
            (transformer_blocks): ModuleList(
              (0-1): 2 x BasicTransformerBlock(
                (norm1): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
                (attn1): Attention(
                  (to_q): LoRACompatibleLinear(in_features=640, out_features=640, bias=False)
                  (to_k): LoRACompatibleLinear(in_features=640, out_features=640, bias=False)
                  (to_v): LoRACompatibleLinear(in_features=640, out_features=640, bias=False)
                  (to_out): ModuleList(
                    (0): LoRACompatibleLinear(in_features=640, out_features=640, bias=True)
                    (1): Dropout(p=0.0, inplace=False)
                  )
                )
                (norm2): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
                (attn2): Attention(
                  (to_q): LoRACompatibleLinear(in_features=640, out_features=640, bias=False)
                  (to_k): LoRACompatibleLinear(in_features=2048, out_features=640, bias=False)
                  (to_v): LoRACompatibleLinear(in_features=2048, out_features=640, bias=False)
                  (to_out): ModuleList(
                    (0): LoRACompatibleLinear(in_features=640, out_features=640, bias=True)
                    (1): Dropout(p=0.0, inplace=False)
                  )
                )
                (norm3): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
                (ff): FeedForward(
                  (net): ModuleList(
                    (0): GEGLU(
                      (proj): LoRACompatibleLinear(in_features=640, out_features=5120, bias=True)
                    )
                    (1): Dropout(p=0.0, inplace=False)
                    (2): LoRACompatibleLinear(in_features=2560, out_features=640, bias=True)
                  )
                )
              )
            )
            (proj_out): LoRACompatibleLinear(in_features=640, out_features=640, bias=True)
          )
        )
        (resnets): ModuleList(
          (0): ResnetBlock2D(
            (norm1): GroupNorm(32, 1920, eps=1e-05, affine=True)
            (conv1): LoRACompatibleConv(1920, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (time_emb_proj): LoRACompatibleLinear(in_features=1280, out_features=640, bias=True)
            (norm2): GroupNorm(32, 640, eps=1e-05, affine=True)
            (dropout): Dropout(p=0.0, inplace=False)
            (conv2): LoRACompatibleConv(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (nonlinearity): SiLU()
            (conv_shortcut): LoRACompatibleConv(1920, 640, kernel_size=(1, 1), stride=(1, 1))
          )
          (1): ResnetBlock2D(
            (norm1): GroupNorm(32, 1280, eps=1e-05, affine=True)
            (conv1): LoRACompatibleConv(1280, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (time_emb_proj): LoRACompatibleLinear(in_features=1280, out_features=640, bias=True)
            (norm2): GroupNorm(32, 640, eps=1e-05, affine=True)
            (dropout): Dropout(p=0.0, inplace=False)
            (conv2): LoRACompatibleConv(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (nonlinearity): SiLU()
            (conv_shortcut): LoRACompatibleConv(1280, 640, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): ResnetBlock2D(
            (norm1): GroupNorm(32, 960, eps=1e-05, affine=True)
            (conv1): LoRACompatibleConv(960, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (time_emb_proj): LoRACompatibleLinear(in_features=1280, out_features=640, bias=True)
            (norm2): GroupNorm(32, 640, eps=1e-05, affine=True)
            (dropout): Dropout(p=0.0, inplace=False)
            (conv2): LoRACompatibleConv(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (nonlinearity): SiLU()
            (conv_shortcut): LoRACompatibleConv(960, 640, kernel_size=(1, 1), stride=(1, 1))
          )
        )
        (upsamplers): ModuleList(
          (0): Upsample2D(
            (conv): LoRACompatibleConv(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
        )
      )
      (2): UpBlock2D(
        (resnets): ModuleList(
          (0): ResnetBlock2D(
            (norm1): GroupNorm(32, 960, eps=1e-05, affine=True)
            (conv1): LoRACompatibleConv(960, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (time_emb_proj): LoRACompatibleLinear(in_features=1280, out_features=320, bias=True)
            (norm2): GroupNorm(32, 320, eps=1e-05, affine=True)
            (dropout): Dropout(p=0.0, inplace=False)
            (conv2): LoRACompatibleConv(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (nonlinearity): SiLU()
            (conv_shortcut): LoRACompatibleConv(960, 320, kernel_size=(1, 1), stride=(1, 1))
          )
          (1-2): 2 x ResnetBlock2D(
            (norm1): GroupNorm(32, 640, eps=1e-05, affine=True)
            (conv1): LoRACompatibleConv(640, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (time_emb_proj): LoRACompatibleLinear(in_features=1280, out_features=320, bias=True)
            (norm2): GroupNorm(32, 320, eps=1e-05, affine=True)
            (dropout): Dropout(p=0.0, inplace=False)
            (conv2): LoRACompatibleConv(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (nonlinearity): SiLU()
            (conv_shortcut): LoRACompatibleConv(640, 320, kernel_size=(1, 1), stride=(1, 1))
          )
        )
      )
    )
    (mid_block): UNetMidBlock2DCrossAttn(
      (attentions): ModuleList(
        (0): Transformer2DModel(
          (norm): GroupNorm(32, 1280, eps=1e-06, affine=True)
          (proj_in): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=True)
          (transformer_blocks): ModuleList(
            (0-9): 10 x BasicTransformerBlock(
              (norm1): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
              (attn1): Attention(
                (to_q): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=False)
                (to_k): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=False)
                (to_v): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=False)
                (to_out): ModuleList(
                  (0): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=True)
                  (1): Dropout(p=0.0, inplace=False)
                )
              )
              (norm2): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
              (attn2): Attention(
                (to_q): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=False)
                (to_k): LoRACompatibleLinear(in_features=2048, out_features=1280, bias=False)
                (to_v): LoRACompatibleLinear(in_features=2048, out_features=1280, bias=False)
                (to_out): ModuleList(
                  (0): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=True)
                  (1): Dropout(p=0.0, inplace=False)
                )
              )
              (norm3): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
              (ff): FeedForward(
                (net): ModuleList(
                  (0): GEGLU(
                    (proj): LoRACompatibleLinear(in_features=1280, out_features=10240, bias=True)
                  )
                  (1): Dropout(p=0.0, inplace=False)
                  (2): LoRACompatibleLinear(in_features=5120, out_features=1280, bias=True)
                )
              )
            )
          )
          (proj_out): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=True)
        )
      )
      (resnets): ModuleList(
        (0-1): 2 x ResnetBlock2D(
          (norm1): GroupNorm(32, 1280, eps=1e-05, affine=True)
          (conv1): LoRACompatibleConv(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (time_emb_proj): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=True)
          (norm2): GroupNorm(32, 1280, eps=1e-05, affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (conv2): LoRACompatibleConv(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (nonlinearity): SiLU()
        )
      )
    )
    (conv_norm_out): GroupNorm(32, 320, eps=1e-05, affine=True)
    (conv_act): SiLU()
    (conv_out): Conv2d(320, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
  (inpaint_unet): UNet2DConditionModel(
    (conv_in): Conv2d(9, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
    (time_proj): Timesteps()
    (time_embedding): TimestepEmbedding(
      (linear_1): Linear(in_features=320, out_features=1280, bias=True)
      (act): SiLU()
      (linear_2): Linear(in_features=1280, out_features=1280, bias=True)
    )
    (add_time_proj): Timesteps()
    (add_embedding): TimestepEmbedding(
      (linear_1): Linear(in_features=2816, out_features=1280, bias=True)
      (act): SiLU()
      (linear_2): Linear(in_features=1280, out_features=1280, bias=True)
    )
    (down_blocks): ModuleList(
      (0): DownBlock2D(
        (resnets): ModuleList(
          (0-1): 2 x ResnetBlock2D(
            (norm1): GroupNorm(32, 320, eps=1e-05, affine=True)
            (conv1): LoRACompatibleConv(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (time_emb_proj): LoRACompatibleLinear(in_features=1280, out_features=320, bias=True)
            (norm2): GroupNorm(32, 320, eps=1e-05, affine=True)
            (dropout): Dropout(p=0.0, inplace=False)
            (conv2): LoRACompatibleConv(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (nonlinearity): SiLU()
          )
        )
        (downsamplers): ModuleList(
          (0): Downsample2D(
            (conv): LoRACompatibleConv(320, 320, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
          )
        )
      )
      (1): CrossAttnDownBlock2D(
        (attentions): ModuleList(
          (0-1): 2 x Transformer2DModel(
            (norm): GroupNorm(32, 640, eps=1e-06, affine=True)
            (proj_in): LoRACompatibleLinear(in_features=640, out_features=640, bias=True)
            (transformer_blocks): ModuleList(
              (0-1): 2 x BasicTransformerBlock(
                (norm1): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
                (attn1): Attention(
                  (to_q): LoRACompatibleLinear(in_features=640, out_features=640, bias=False)
                  (to_k): LoRACompatibleLinear(in_features=640, out_features=640, bias=False)
                  (to_v): LoRACompatibleLinear(in_features=640, out_features=640, bias=False)
                  (to_out): ModuleList(
                    (0): LoRACompatibleLinear(in_features=640, out_features=640, bias=True)
                    (1): Dropout(p=0.0, inplace=False)
                  )
                )
                (norm2): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
                (attn2): Attention(
                  (to_q): LoRACompatibleLinear(in_features=640, out_features=640, bias=False)
                  (to_k): LoRACompatibleLinear(in_features=2048, out_features=640, bias=False)
                  (to_v): LoRACompatibleLinear(in_features=2048, out_features=640, bias=False)
                  (to_out): ModuleList(
                    (0): LoRACompatibleLinear(in_features=640, out_features=640, bias=True)
                    (1): Dropout(p=0.0, inplace=False)
                  )
                )
                (norm3): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
                (ff): FeedForward(
                  (net): ModuleList(
                    (0): GEGLU(
                      (proj): LoRACompatibleLinear(in_features=640, out_features=5120, bias=True)
                    )
                    (1): Dropout(p=0.0, inplace=False)
                    (2): LoRACompatibleLinear(in_features=2560, out_features=640, bias=True)
                  )
                )
              )
            )
            (proj_out): LoRACompatibleLinear(in_features=640, out_features=640, bias=True)
          )
        )
        (resnets): ModuleList(
          (0): ResnetBlock2D(
            (norm1): GroupNorm(32, 320, eps=1e-05, affine=True)
            (conv1): LoRACompatibleConv(320, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (time_emb_proj): LoRACompatibleLinear(in_features=1280, out_features=640, bias=True)
            (norm2): GroupNorm(32, 640, eps=1e-05, affine=True)
            (dropout): Dropout(p=0.0, inplace=False)
            (conv2): LoRACompatibleConv(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (nonlinearity): SiLU()
            (conv_shortcut): LoRACompatibleConv(320, 640, kernel_size=(1, 1), stride=(1, 1))
          )
          (1): ResnetBlock2D(
            (norm1): GroupNorm(32, 640, eps=1e-05, affine=True)
            (conv1): LoRACompatibleConv(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (time_emb_proj): LoRACompatibleLinear(in_features=1280, out_features=640, bias=True)
            (norm2): GroupNorm(32, 640, eps=1e-05, affine=True)
            (dropout): Dropout(p=0.0, inplace=False)
            (conv2): LoRACompatibleConv(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (nonlinearity): SiLU()
          )
        )
        (downsamplers): ModuleList(
          (0): Downsample2D(
            (conv): LoRACompatibleConv(640, 640, kernel_size=(3, 3), stride=(2, 2), padding=(1, 1))
          )
        )
      )
      (2): CrossAttnDownBlock2D(
        (attentions): ModuleList(
          (0-1): 2 x Transformer2DModel(
            (norm): GroupNorm(32, 1280, eps=1e-06, affine=True)
            (proj_in): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=True)
            (transformer_blocks): ModuleList(
              (0-9): 10 x BasicTransformerBlock(
                (norm1): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
                (attn1): Attention(
                  (to_q): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=False)
                  (to_k): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=False)
                  (to_v): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=False)
                  (to_out): ModuleList(
                    (0): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=True)
                    (1): Dropout(p=0.0, inplace=False)
                  )
                )
                (norm2): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
                (attn2): Attention(
                  (to_q): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=False)
                  (to_k): LoRACompatibleLinear(in_features=2048, out_features=1280, bias=False)
                  (to_v): LoRACompatibleLinear(in_features=2048, out_features=1280, bias=False)
                  (to_out): ModuleList(
                    (0): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=True)
                    (1): Dropout(p=0.0, inplace=False)
                  )
                )
                (norm3): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
                (ff): FeedForward(
                  (net): ModuleList(
                    (0): GEGLU(
                      (proj): LoRACompatibleLinear(in_features=1280, out_features=10240, bias=True)
                    )
                    (1): Dropout(p=0.0, inplace=False)
                    (2): LoRACompatibleLinear(in_features=5120, out_features=1280, bias=True)
                  )
                )
              )
            )
            (proj_out): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=True)
          )
        )
        (resnets): ModuleList(
          (0): ResnetBlock2D(
            (norm1): GroupNorm(32, 640, eps=1e-05, affine=True)
            (conv1): LoRACompatibleConv(640, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (time_emb_proj): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=True)
            (norm2): GroupNorm(32, 1280, eps=1e-05, affine=True)
            (dropout): Dropout(p=0.0, inplace=False)
            (conv2): LoRACompatibleConv(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (nonlinearity): SiLU()
            (conv_shortcut): LoRACompatibleConv(640, 1280, kernel_size=(1, 1), stride=(1, 1))
          )
          (1): ResnetBlock2D(
            (norm1): GroupNorm(32, 1280, eps=1e-05, affine=True)
            (conv1): LoRACompatibleConv(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (time_emb_proj): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=True)
            (norm2): GroupNorm(32, 1280, eps=1e-05, affine=True)
            (dropout): Dropout(p=0.0, inplace=False)
            (conv2): LoRACompatibleConv(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (nonlinearity): SiLU()
          )
        )
      )
    )
    (up_blocks): ModuleList(
      (0): CrossAttnUpBlock2D(
        (attentions): ModuleList(
          (0-2): 3 x Transformer2DModel(
            (norm): GroupNorm(32, 1280, eps=1e-06, affine=True)
            (proj_in): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=True)
            (transformer_blocks): ModuleList(
              (0-9): 10 x BasicTransformerBlock(
                (norm1): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
                (attn1): Attention(
                  (to_q): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=False)
                  (to_k): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=False)
                  (to_v): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=False)
                  (to_out): ModuleList(
                    (0): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=True)
                    (1): Dropout(p=0.0, inplace=False)
                  )
                )
                (norm2): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
                (attn2): Attention(
                  (to_q): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=False)
                  (to_k): LoRACompatibleLinear(in_features=2048, out_features=1280, bias=False)
                  (to_v): LoRACompatibleLinear(in_features=2048, out_features=1280, bias=False)
                  (to_out): ModuleList(
                    (0): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=True)
                    (1): Dropout(p=0.0, inplace=False)
                  )
                )
                (norm3): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
                (ff): FeedForward(
                  (net): ModuleList(
                    (0): GEGLU(
                      (proj): LoRACompatibleLinear(in_features=1280, out_features=10240, bias=True)
                    )
                    (1): Dropout(p=0.0, inplace=False)
                    (2): LoRACompatibleLinear(in_features=5120, out_features=1280, bias=True)
                  )
                )
              )
            )
            (proj_out): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=True)
          )
        )
        (resnets): ModuleList(
          (0-1): 2 x ResnetBlock2D(
            (norm1): GroupNorm(32, 2560, eps=1e-05, affine=True)
            (conv1): LoRACompatibleConv(2560, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (time_emb_proj): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=True)
            (norm2): GroupNorm(32, 1280, eps=1e-05, affine=True)
            (dropout): Dropout(p=0.0, inplace=False)
            (conv2): LoRACompatibleConv(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (nonlinearity): SiLU()
            (conv_shortcut): LoRACompatibleConv(2560, 1280, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): ResnetBlock2D(
            (norm1): GroupNorm(32, 1920, eps=1e-05, affine=True)
            (conv1): LoRACompatibleConv(1920, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (time_emb_proj): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=True)
            (norm2): GroupNorm(32, 1280, eps=1e-05, affine=True)
            (dropout): Dropout(p=0.0, inplace=False)
            (conv2): LoRACompatibleConv(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (nonlinearity): SiLU()
            (conv_shortcut): LoRACompatibleConv(1920, 1280, kernel_size=(1, 1), stride=(1, 1))
          )
        )
        (upsamplers): ModuleList(
          (0): Upsample2D(
            (conv): LoRACompatibleConv(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
        )
      )
      (1): CrossAttnUpBlock2D(
        (attentions): ModuleList(
          (0-2): 3 x Transformer2DModel(
            (norm): GroupNorm(32, 640, eps=1e-06, affine=True)
            (proj_in): LoRACompatibleLinear(in_features=640, out_features=640, bias=True)
            (transformer_blocks): ModuleList(
              (0-1): 2 x BasicTransformerBlock(
                (norm1): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
                (attn1): Attention(
                  (to_q): LoRACompatibleLinear(in_features=640, out_features=640, bias=False)
                  (to_k): LoRACompatibleLinear(in_features=640, out_features=640, bias=False)
                  (to_v): LoRACompatibleLinear(in_features=640, out_features=640, bias=False)
                  (to_out): ModuleList(
                    (0): LoRACompatibleLinear(in_features=640, out_features=640, bias=True)
                    (1): Dropout(p=0.0, inplace=False)
                  )
                )
                (norm2): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
                (attn2): Attention(
                  (to_q): LoRACompatibleLinear(in_features=640, out_features=640, bias=False)
                  (to_k): LoRACompatibleLinear(in_features=2048, out_features=640, bias=False)
                  (to_v): LoRACompatibleLinear(in_features=2048, out_features=640, bias=False)
                  (to_out): ModuleList(
                    (0): LoRACompatibleLinear(in_features=640, out_features=640, bias=True)
                    (1): Dropout(p=0.0, inplace=False)
                  )
                )
                (norm3): LayerNorm((640,), eps=1e-05, elementwise_affine=True)
                (ff): FeedForward(
                  (net): ModuleList(
                    (0): GEGLU(
                      (proj): LoRACompatibleLinear(in_features=640, out_features=5120, bias=True)
                    )
                    (1): Dropout(p=0.0, inplace=False)
                    (2): LoRACompatibleLinear(in_features=2560, out_features=640, bias=True)
                  )
                )
              )
            )
            (proj_out): LoRACompatibleLinear(in_features=640, out_features=640, bias=True)
          )
        )
        (resnets): ModuleList(
          (0): ResnetBlock2D(
            (norm1): GroupNorm(32, 1920, eps=1e-05, affine=True)
            (conv1): LoRACompatibleConv(1920, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (time_emb_proj): LoRACompatibleLinear(in_features=1280, out_features=640, bias=True)
            (norm2): GroupNorm(32, 640, eps=1e-05, affine=True)
            (dropout): Dropout(p=0.0, inplace=False)
            (conv2): LoRACompatibleConv(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (nonlinearity): SiLU()
            (conv_shortcut): LoRACompatibleConv(1920, 640, kernel_size=(1, 1), stride=(1, 1))
          )
          (1): ResnetBlock2D(
            (norm1): GroupNorm(32, 1280, eps=1e-05, affine=True)
            (conv1): LoRACompatibleConv(1280, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (time_emb_proj): LoRACompatibleLinear(in_features=1280, out_features=640, bias=True)
            (norm2): GroupNorm(32, 640, eps=1e-05, affine=True)
            (dropout): Dropout(p=0.0, inplace=False)
            (conv2): LoRACompatibleConv(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (nonlinearity): SiLU()
            (conv_shortcut): LoRACompatibleConv(1280, 640, kernel_size=(1, 1), stride=(1, 1))
          )
          (2): ResnetBlock2D(
            (norm1): GroupNorm(32, 960, eps=1e-05, affine=True)
            (conv1): LoRACompatibleConv(960, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (time_emb_proj): LoRACompatibleLinear(in_features=1280, out_features=640, bias=True)
            (norm2): GroupNorm(32, 640, eps=1e-05, affine=True)
            (dropout): Dropout(p=0.0, inplace=False)
            (conv2): LoRACompatibleConv(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (nonlinearity): SiLU()
            (conv_shortcut): LoRACompatibleConv(960, 640, kernel_size=(1, 1), stride=(1, 1))
          )
        )
        (upsamplers): ModuleList(
          (0): Upsample2D(
            (conv): LoRACompatibleConv(640, 640, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          )
        )
      )
      (2): UpBlock2D(
        (resnets): ModuleList(
          (0): ResnetBlock2D(
            (norm1): GroupNorm(32, 960, eps=1e-05, affine=True)
            (conv1): LoRACompatibleConv(960, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (time_emb_proj): LoRACompatibleLinear(in_features=1280, out_features=320, bias=True)
            (norm2): GroupNorm(32, 320, eps=1e-05, affine=True)
            (dropout): Dropout(p=0.0, inplace=False)
            (conv2): LoRACompatibleConv(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (nonlinearity): SiLU()
            (conv_shortcut): LoRACompatibleConv(960, 320, kernel_size=(1, 1), stride=(1, 1))
          )
          (1-2): 2 x ResnetBlock2D(
            (norm1): GroupNorm(32, 640, eps=1e-05, affine=True)
            (conv1): LoRACompatibleConv(640, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (time_emb_proj): LoRACompatibleLinear(in_features=1280, out_features=320, bias=True)
            (norm2): GroupNorm(32, 320, eps=1e-05, affine=True)
            (dropout): Dropout(p=0.0, inplace=False)
            (conv2): LoRACompatibleConv(320, 320, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
            (nonlinearity): SiLU()
            (conv_shortcut): LoRACompatibleConv(640, 320, kernel_size=(1, 1), stride=(1, 1))
          )
        )
      )
    )
    (mid_block): UNetMidBlock2DCrossAttn(
      (attentions): ModuleList(
        (0): Transformer2DModel(
          (norm): GroupNorm(32, 1280, eps=1e-06, affine=True)
          (proj_in): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=True)
          (transformer_blocks): ModuleList(
            (0-9): 10 x BasicTransformerBlock(
              (norm1): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
              (attn1): Attention(
                (to_q): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=False)
                (to_k): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=False)
                (to_v): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=False)
                (to_out): ModuleList(
                  (0): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=True)
                  (1): Dropout(p=0.0, inplace=False)
                )
              )
              (norm2): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
              (attn2): Attention(
                (to_q): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=False)
                (to_k): LoRACompatibleLinear(in_features=2048, out_features=1280, bias=False)
                (to_v): LoRACompatibleLinear(in_features=2048, out_features=1280, bias=False)
                (to_out): ModuleList(
                  (0): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=True)
                  (1): Dropout(p=0.0, inplace=False)
                )
              )
              (norm3): LayerNorm((1280,), eps=1e-05, elementwise_affine=True)
              (ff): FeedForward(
                (net): ModuleList(
                  (0): GEGLU(
                    (proj): LoRACompatibleLinear(in_features=1280, out_features=10240, bias=True)
                  )
                  (1): Dropout(p=0.0, inplace=False)
                  (2): LoRACompatibleLinear(in_features=5120, out_features=1280, bias=True)
                )
              )
            )
          )
          (proj_out): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=True)
        )
      )
      (resnets): ModuleList(
        (0-1): 2 x ResnetBlock2D(
          (norm1): GroupNorm(32, 1280, eps=1e-05, affine=True)
          (conv1): LoRACompatibleConv(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (time_emb_proj): LoRACompatibleLinear(in_features=1280, out_features=1280, bias=True)
          (norm2): GroupNorm(32, 1280, eps=1e-05, affine=True)
          (dropout): Dropout(p=0.0, inplace=False)
          (conv2): LoRACompatibleConv(1280, 1280, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
          (nonlinearity): SiLU()
        )
      )
    )
    (conv_norm_out): GroupNorm(32, 320, eps=1e-05, affine=True)
    (conv_act): SiLU()
    (conv_out): Conv2d(320, 4, kernel_size=(3, 3), stride=(1, 1), padding=(1, 1))
  )
)